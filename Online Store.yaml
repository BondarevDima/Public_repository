openapi: 3.0.0
info:
  title: Интернет магазин
  description: |-
    Это проект интернет-магазина, основанный на OpenAPI 3.0 specification. Данная спецификация создана при помощи Swagger [https://swagger.io](https://swagger.io). 
    
    My links:
    - [My GitHub](https://github.com/BondarevDima)

  contact:
    email: ttyt9@mail.ru
  version: 0.1.0
servers:
  - url: http://localhost:8080/api/v1
    description: My server
tags:
    - name: Item
      description: "Здесь представлены все методы работы с API"
paths:
    /Items:
      get:
        summary: Метод получения товара
        description: Метод предназначен для получения списка всех товаров в базе данных.
        operationId: getItems
        tags:
          - Item
        responses:
          '200':
            description: Список товаров
            content:
              application/yaml:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Item"
          '405':
            description: Validation exception
      post:
        summary: Метод добавления нового товара
        description: Метод предназначен для сохранения в базу данных нового товара.
        operationId: createItem
        tags:
          - Item
        requestBody:
          required: true
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Item"
            application/yaml;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Item"
        responses:
          '200':
            description: Добавление успешно
            content:
              application/json;charset=UTF-8:
                schema:
                  $ref: "#/components/schemas/Item"
              application/yaml;charset=UTF-8:
                schema:
                  $ref: "#/components/schemas/Item"
          '400':
            description: Некорректные входные данные
            content:
              application/json;charset=UTF-8:
                schema:
                  type: array
                  items:
                    type: string
    /Items/{id}:
      get:
        summary: Метод получения товара по идентификатору
        description: Метод предназначен для получения из базы данных информации по товару.
        operationId: getItemById
        tags:
          - Item
        parameters:
          - name: id
            in: path
            required: true
            description: Идентификатор товара
            example: 1234
            schema:
              type: integer
              format: id
        responses:
          '200':
            description: Искомый товар
            content:
              application/json;charset=UTF-8:
                schema:
                  $ref: "#/components/schemas/Item"
              application/yaml;charset=UTF-8:
                schema:
                  $ref: "#/components/schemas/Item"
          '400':
            description: Некорректные входные данные
            content:
              application/json;charset=UTF-8:
                schema:
                  type: array
                  items:
                    type: string
      put:
        summary: Метод обновления товара в каталоге
        description: Метод предназначен для обновления в базе данных товара .
        operationId: updateItem
        tags:
          - Item
        parameters:
          - name: id
            in: path
            required: true
            description: Идентификатор товара
            example: 1234
            schema:
              type: integer
              format: id
        requestBody:
          required: true
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Item"
            application/yaml;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/Item"
        responses:
          '200':
            description: Обновление прошло успешно
            content:
              application/json;charset=UTF-8:
                schema:
                  $ref: "#/components/schemas/Item"
              application/yaml;charset=UTF-8:
                schema:
                  $ref: "#/components/schemas/Item"
          '400':
            description: Введён некорректный ID
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: string
              application/yaml:
                schema:
                  type: array
                  items:
                    type: string
          '404':
            description: Вещь не найдена
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
              application/yaml:
                schema:
                  $ref: "#/components/schemas/Error"
          '5XX':
            description: Любая неожиданная ошибка сервера
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
              application/yaml:
                schema:
                  $ref: "#/components/schemas/Error"
      delete:
        summary: Метод удаления вещи по идентификатору
        description: Метод предназначен для удаления из базы данных вещей.
        operationId: deleteItemById
        tags:
          - Item
        parameters:
          - name: id
            in: path
            required: true
            description: Идентификатор вещи
            example: 1234
            schema:
              type: string
              format: id
        responses:
          '200':
            description: Успешное удаление
            content: {}
    /Items/status/{status}:
      get:
        summary: Метод получения состояния вещи     
        description: Метод предназначен для получения вещей и отображению их состояния
        operationId: getItemByStatus
        tags:
          - Item
        parameters:
          - name: status
            in: path
            required: true
            description: Статус (состояние) вещи
            schema:
              type: string
              enum: 
                - Новая
                - б/у
        responses:
          '200':
            description: Вещь
            content:
              application/json;charset=UTF-8:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Item"
              application/yaml;charset=UTF-8:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Item"
                  
components:
    schemas:
      Item:
        type: object
        required:
          - name
          - status
        properties:
          Item_id:
            type: integer
            format: id
            example: 1234
          name:
            description: Название вещи
            type: string
            example: Джинсы
          status:
            description: Статус (состояние) вещи
            type: string
            enum:
              - Новая
              - б/у
            example: Новая
          note:
            description: Описание, пометки
            type: string
            example: Levi's 501
          created_at:
            description: Прибытие на склад
            type: string
            example: 2022-07-01T15:00:00+01
      Error:
        type: object
        required:
          - title
          - detail
          - request
          - time
          - errorTraceId
        properties:
          title:
            description: Описание проблемы
            type: string
            example: Entity not found
          detail:
            description: Подробное описание ошибки
            type: string
            example: Entity [Post] with id = [123456] not found. You MUST use POST to add entity instead of PUT
          request:
            description: Метод и URL запроса
            type: string
            example: PUT /posts/123456
          time:
            description: Время возникновения ошибки
            type: string
            example: 1996-12-19T16:39:57.87-08:00
          errorTraceId:
            description: Идентификатор возникновения ошибки
            type: string
            example: ce1ff211-b5dd-4397-b8a8-3f640705efa2
          errorCode:
            description: Код ошибки 
            type: integer
            format: integer
            example: 57